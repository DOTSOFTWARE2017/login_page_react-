{"ast":null,"code":"// import axios from \"axios\";\n// import { Navigate } from \"react-router-dom\";\n// import { getToken, getTokenRefresh } from \"./Common\";\n\n// // Add a request interceptor\n// axios.interceptors.request.use(\n//   (config) => {\n//     const token = getToken();\n//     if (token) {\n//       config.headers[\"Authorization\"] = \"Bearer \" + token;\n//     }\n//     // config.headers['Content-Type'] = 'application/json';\n//     return config;\n//   },\n//   (error) => {\n//     Promise.reject(error);\n//   }\n// );\n\n// //Add a response interceptor\n\n// axios.interceptors.response.use(\n//   (response) => {\n//     return response;\n//   },\n//   async function (error) {\n//     const originalRequest = error.config;\n\n//     if (\n//       error.response.status === 401 &&\n//       originalRequest.url ===\n//         \"https://b77a-103-141-51-42.in.ngrok.io/api/v1/login\"\n//     ) {\n//       Navigate(\"/login\");\n//       return Promise.reject(error);\n//     }\n\n//     if (error.response.status === 401 && !originalRequest._retry) {\n//       originalRequest._retry = true;\n//       const refreshToken =getTokenRefresh();\n//       const res = await axios.post(\"https://b77a-103-141-51-42.in.ngrok.io/api/v1/login\", {\n//         refresh_token: refreshToken,\n//       });\n//       if (res.status === 201) {\n//         sessionStorage.setToken(res.data);\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + getToken();\n//         return axios(originalRequest);\n//       }\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default axios","map":{"version":3,"names":[],"sources":["/home/cc/Desktop/react/login_page_react-/src/Utils/axios.js"],"sourcesContent":["// import axios from \"axios\";\n// import { Navigate } from \"react-router-dom\";\n// import { getToken, getTokenRefresh } from \"./Common\";\n\n\n\n// // Add a request interceptor\n// axios.interceptors.request.use(\n//   (config) => {\n//     const token = getToken();\n//     if (token) {\n//       config.headers[\"Authorization\"] = \"Bearer \" + token;\n//     }\n//     // config.headers['Content-Type'] = 'application/json';\n//     return config;\n//   },\n//   (error) => {\n//     Promise.reject(error);\n//   }\n// );\n\n// //Add a response interceptor\n\n// axios.interceptors.response.use(\n//   (response) => {\n//     return response;\n//   },\n//   async function (error) {\n//     const originalRequest = error.config;\n\n//     if (\n//       error.response.status === 401 &&\n//       originalRequest.url ===\n//         \"https://b77a-103-141-51-42.in.ngrok.io/api/v1/login\"\n//     ) {\n//       Navigate(\"/login\");\n//       return Promise.reject(error);\n//     }\n\n//     if (error.response.status === 401 && !originalRequest._retry) {\n//       originalRequest._retry = true;\n//       const refreshToken =getTokenRefresh();\n//       const res = await axios.post(\"https://b77a-103-141-51-42.in.ngrok.io/api/v1/login\", {\n//         refresh_token: refreshToken,\n//       });\n//       if (res.status === 201) {\n//         sessionStorage.setToken(res.data);\n//         axios.defaults.headers.common[\"Authorization\"] =\n//           \"Bearer \" + getToken();\n//         return axios(originalRequest);\n//       }\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default axios"],"mappings":"AAAA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}